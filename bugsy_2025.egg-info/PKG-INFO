Metadata-Version: 2.4
Name: bugsy_2025
Version: 0.1.0
Summary: Учебная практика весна 2025
Author-email: Александра Решетникова <alexsachare239@gmail.com>
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: pdfminer.six>=20201018
Requires-Dist: networkx
Requires-Dist: matplotlib
Requires-Dist: nltk
Requires-Dist: snowballstemmer
Requires-Dist: sentence-transformers
Requires-Dist: faiss-cpu
Requires-Dist: pymorphy2
Requires-Dist: ipykernel
Requires-Dist: notebook
Provides-Extra: viz
Requires-Dist: pyvis; extra == "viz"
Requires-Dist: jinja2; extra == "viz"

# Bugsy 2025

**Bugsy 2025** — экспериментальный проект в рамках учебной практики. Система обрабатывает PDF-документацию, разбивает её на логически связанные фрагменты (чанки), выделяет ключевые понятия, нормализует и расширяет теги, а также предоставляет два типа поиска:
- Семантический поиск (на основе эмбеддингов и FAISS)
- Поиск по тегам с расширением по графу понятий
На основе найденных частей документации собирается итоговый промпт.

---

## Установка

1. Клонируйте репозиторий и создайте виртуальное окружение:

```bash
git clone https://github.com/your-username/bugsy_2025.git
cd bugsy_2025
python -m venv myenv
myenv\Scripts\activate  # на Windows
```
2. Установите зависимости:
```bash
pip install -e .
```
### Основной пайплайн обработки
Выполняется с помощью:
```bash
python retag_main.py
```
Этот скрипт выполняет:
1. Извлечение терминов из текста
2. Фильтрация частотных терминов
3. Теггирование чанков
4. Нормализация тегов по словарю
5. Сведение тегов к понятийным ядрам
Результат: data/structured_chunks_final_tagged.json

### Поиск по документации

1. Семантический поиск (FAISS + Sentence Transformers)
```bash
python search_semantic.py
```
- Запрос лемматизируется, кодируется моделью, ищется ближайшие чанки
- Результаты сохраняются в search_results_semantic/results_XXX.json

2. Поиск по тегам и графу понятий
```bash
python tag_graph_search.py
```
- Запрос лемматизируется и расширяется по concept_graph.json
- Производится пересечение с тегами чанков
- Результаты сохраняются в search_results_graph/results_XXX.json

### Структура проекта
```bash
bugsy_2025/
├── chunker/                   # Обработка документа и теггирование
│   ├── extract_terms.py
│   ├── filter_tag_chunks.py
│   ├── tag_chunks.py
│   ├── normalize_tags.py
│   ├── retag_chunks.py
│   ├── retag_by_concepts.py
├── semantic/                  # Семантический поиск (FAISS)
│   ├── indexer.py
│   ├── search.py
├── graph_search/              # Поиск по понятийной структуре
│   ├── search_engine.py
│   ├── semantic_expander.py
│   ├── build_graph.py
├── data/                      # Входные и выходные файлы
│   ├── marketer.pdf
│   ├── structured_chunks_final_tagged.json
│   ├── concept_graph.json
│   ├── *.json
├── search_semantic.py         # Интерфейс семантического поиска
├── tag_graph_search.py        # Интерфейс графового поиска
├── retag_main.py              # Главный pipeline теггирования
├── pyproject.toml
├── README.md
```
### Требования
Требования
- `Python 3.8+`
- `pdfminer.six`, `nltk`, `networkx`, `matplotlib`, `snowballstemmer`
- `sentence-transformers`, `faiss-cpu`, `pymorphy2`
Все зависимости подключаются автоматически через `pip install -e .`

### Примеры запросов
- запуск информационной рассылки
- валидировать клиента перед отправкой
- тестирование сценария
- аудитория и условия начала
- редактирование макросов

### Автор
Александра Решетникова
Учебная практика, СПбГУ, весна 2025
