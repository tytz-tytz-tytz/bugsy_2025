Ты — инженер по тестированию пользовательских интерфейсов.

Работа ведётся в интерфейсе Marketer, где пользовательские события используются как триггеры для запуска рассылок.

---

Цель

Сформулируй список тестовых сценариев, охватывающих ключевые аспекты редактирования пользовательского события.

Сценарии должны соответствовать:
- поведению интерфейса Marketer;
- ограничениям и правилам, описанным в документации;
- заранее выделенным аспектам (атрибутам), перечисленным ниже.

---

Что требуется

На каждый атрибут составь **1–2 сценария**, которые отражают валидное или заблокированное поведение интерфейса.

Для каждого сценария укажи:

1. **Название** — краткое и точное;
2. **Цель** — что именно проверяется;
3. **Предпосылки** — только если сценарий невозможен без начального состояния (например, «рассылка активна»);
4. **Шаги** — 2–5 последовательных действий пользователя;
5. **Ожидаемый результат** — поведение системы (интерфейса или backend).

Формат:

1. <Название сценария>  
   Цель: …  
   Предпосылки: …  
   Шаги:  
   1. …  
   2. …  
   Ожидаемый результат: …

---

Указания

- Не описывай сценарии, которые нарушают ограничения из документации.
- Не придумывай поведение, которое в интерфейсе отсутствует.
- Учитывай только допустимые действия в UI.
- Не пиши визуальные, стилистические и адаптивные проверки.

---

Дополнительные требования

- Учитывай различие между **именем** и **идентификатором** аргумента;
- Не путай отображаемое имя и макрос: в макросах участвуют **идентификаторы**;
- При наличии связанной рассылки учитывай её **состояние** («неактивна» или «активна»);
- Помни, что UI-контролы ограничивают ввод по типу — например, невозможно ввести текст в поле `decimal`.

---

Атрибуты (поведение, которое нужно покрыть)

1. **Изменение названия события**  
   Что проверяется: Возможность редактирования имени события и его корректное отображение в интерфейсе.  
   Почему важно: Имя используется для отображения в условиях запуска рассылок. Изменение не должно нарушать связь с зависимыми рассылками.

2. **Валидация идентификатора события**  
   Что проверяется: Проверка уникальности и формата идентификатора при его изменении (например, запрет спецсимволов).  
   Почему важно: Идентификатор используется в API для генерации событий. Некорректные значения могут нарушить интеграции.

3. **Добавление/удаление аргументов события**  
   Что проверяется: Возможность добавления новых аргументов и удаления неиспользуемых в рассылках.  
   Почему важно: Удаление аргумента, задействованного в макросах рассылки, должно блокироваться для сохранения их работоспособности.

4. **Редактирование имени аргумента**  
   Что проверяется: Возможность изменения названия аргумента, даже если он используется в рассылках.  
   Почему важно: Имя аргумента влияет только на отображение в интерфейсе, но не на логику макросов.

5. **Изменение идентификатора аргумента**  
   Что проверяется: Запрет изменения идентификатора аргумента, если он используется в макросах рассылок.  
   Почему важно: Идентификатор аргумента связан с макросами. Его изменение приведет к ошибкам в рассылках.

6. **Валидация типов аргументов**  
   Что проверяется: Невозможность изменить тип аргумента после его создания.  
   Почему важно: Тип данных аргумента жестко задается при создании и влияет на валидацию значений при генерации события.

7. **Ограничения при наличии активных рассылок**  
   Что проверяется: Запрет редактирования любых полей события, если связанная рассылка запущена.  
   Почему важно: Изменения во время выполнения рассылки могут привести к неконсистентности данных.

8. **Автоматическое применение изменений**  
   Что проверяется: Отсутствие кнопок "Сохранить" и "Отмена" — изменения сохраняются сразу после ввода.  
   Почему важно: Риск случайных изменений, требующих проверки реакции интерфейса на мгновенное обновление.

9. **Взаимодействие с backend при редактировании**  
   Что проверяется: Корректная отправка изменений на сервер и обработка ошибок (например, конфликт идентификаторов).  
   Почему важно: Несохранение изменений на сервере нарушит работу рассылок.

10. **Валидация значений аргументов на фронтенде**  
    Что проверяется: Использование соответствующих контролов (календарь для даты, чекбокс для boolean и т.д.).  
    Почему важно: Предотвращение ввода некорректных данных на этапе тестовой генерации события.

11. **Обработка ошибок при нарушении ограничений**  
    Что проверяется: Понятные сообщения об ошибках при попытке удалить аргумент, используемый в рассылке, или изменить идентификатор события с дубликатом.  
    Почему важно: Быстрое исправление ошибок пользователем без потери контекста.

12. **Запрет редактирования аргументов, связанных с активными макросами**  
    Что проверяется: Блокировка удаления или изменения идентификатора аргумента, если он задействован в макросах рассылки.  
    Почему важно: Сохранение целостности данных в рассылках, зависящих от события.

13. **Влияние изменений на связанные рассылки**  
    Что проверяется: Корректное обновление имени события/аргументов в интерфейсе выбора триггеров для рассылок.  
    Почему важно: Маркетолог должен видеть актуальные названия при настройке условий.

14. **Реакция на попытку удаления события с активными рассылками**  
    Что проверяется: Запрет удаления события, если оно используется в рассылках, даже в неактивном состоянии.  
    Почему важно: Предотвращение "висячих" ссылок в настройках рассылок.

15. **Проверка типов при тестовой генерации события**  
    Что проверяется: Невозможность ввести значение аргумента, не соответствующее его типу, через интерфейс.  
    Почему важно: Обеспечение consistency с API, где тип данных строго валидируется.

---

Документация

События могут являться триггером к началу рассылки для клиента. Это удобно для решения некоторых маркетинговых задач. Например, можно создать событие «Клиент воспользовался услугой» и генерировать его при оплате клиентом услуги. Получив информацию о событии, бот может запустить одну или несколько рассылок этому клиенту: контроль качества через несколько дней, повторное предложение услуги со скидкой через месяц и т. д.
События делятся на два типа:
1. Системные:
• Добавление нового клиента;
• Подтверждение номера телефона.
2. Пользовательские.

Пользовательские события
Пользовательские события могут генерироваться из другой рассылки или с помощью специального вызова API.
Пользовательские события можно создавать и удалять из интерфейса консоли маркетолога.

При создании события задается его идентификатор, имя и аргументы. Идентификатор события используется при генерации события. Имя используется для отображения события в интерфейсе, например, при выборе события в условиях запуска рассылки.
Аргументы позволяют передавать дополнительную информацию при генерации события.
При создании пользовательских событий в них может быть добавлено произвольное число аргументов. Например, для события «Клиент воспользовался услугой» можно добавить аргументы «Дата оказания услуги» и «Мастер, который оказывал услугу». Эти аргументы можно будет использовать в текстах сообщений, кнопках рассылки и других текстовых полях аналогично макросам. Таким образом, можно создавать персонифицированные для каждого клиента рассылки.

Редактирование событий
После создания пользовательского события маркетолог может произвольно редактировать все доступные поля и удалить его.
Если хотя бы одна рассылка настроена на старт по данному событию, то его удаление запрещено, редактирование названия и идентификатора рассылки разрешено. Редактирование и удаление аргументов события ограничено созданными в рассылке макросами. Если аргумент события не используется в рассылке, то его можно удалять и изменять. Если используется, то доступно только изменение названия аргумента.
Если хотя бы одна из рассылок, настроенных на старт по данному событию, запущена, то редактирование всех полей события и его аргументов запрещено.

Тестирование рассылок, запускаемых по событию
В интерфейсе консоли маркетолога предусмотрена возможность генерации событий в целях тестирования.
Для этого можно нажать кнопку «Сгенерировать событие» в разделе «События» напротив выбранного события или на странице самого события.
После генерации события с использованием интерфейса Marketer в области «Список launch_result_ids» отображаются специальные ссылки, позволяющие перейти к отладке рассылки.
При переходе по ссылке отображается интерфейс отладки, в котором применен фильтр по выбранному идентификатору запуска (launch_result_id).
Для передачи информации о запросе разработчикам компании, например, для интеграции с CRM, удобно использовать кнопки копирования запроса в формате curl.

При генерации событий при помощи интерфейса консоли маркетолога система не даст ввести значения аргументов, не соответствующие их типу. При генерации событий при помощи API-вызовов также выполняется проверка соответствия типов аргументов. Например, при вызове события с некорректным значением аргумента vip:
curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer Contoso_:eyJoXfDsaJkKrsGFH..." -d '{ "customer_messenger_id": 13561, "event_name": "numeric_code_for_client", "arguments": { "code": 133442, "discount": 15, "vip": "no" } }' "https://mailing-factory.dev.maxbot.ai/v1/event"
сервер вернет ответ с HTTP-статусом 409:
HTTP/2 409 { "detail": "Argument type error(boolean): no", "key": "argument_type" }

Использование макросов
Макросы позволяют персонифицировать рассылки для клиентов. Например, можно создать рассылку, в тексте которой используются два макроса:
• customer_name — имя и отчество клиента;
• customer_discount — персональная скидка.
Далее можно использовать файл аудитории, в котором заданы значения для используемых макросов.
Каждому клиенту из аудитории рассылки можно задать свои значения, таким образом, сделав рассылку уникальной для каждого клиента.

Поля, в которых можно использовать макросы
Макросы можно использовать почти во всех текстовых полях конструктора рассылок:
• Тексты сообщений;
• Заголовки кнопок;
• URL для кнопок-ссылок;
• URL для медиа-контента;
• Сообщения при переводе в канал;
• Большинство полей настроек вызова внешней системы (кроме названий заголовков запроса и названий параметров запроса);
• Аргументы события при генерации событий;
• Все текстовые поля SMS-блока и настройки вызова внешней системы в SMS-блоке
• Многие текстовые поля других действий9.

Если рассылка начинается при возникновении события, то в рассылку можно добавлять только макросы, названия которых совпадают с именами аргументов события, по которому стартует рассылка. При попытке использовать другой макрос возникнет ошибка. При попытке удалить аргумент события, который используется в рассылке, возникнет ошибка. При попытке сменить событие, по которому запускается рассылка, требуется чтобы у нового события были все аргументы, которые используются в рассылке.

Определение значений макросов для клиентов
Для рассылок, начинающихся по событию, значения макросов передаются в аргументах события. Например, если рассылка началась по событию «Создание промокода для клиента», то в теле рассылки могут быть использованы макросы {{code}}, {{discount}} и {{valid_thru}}.

Макросы могут иметь следующие типы:
• “date” — дата и время (используется формат ISO 8601);
• “decimal“ — число, в т. ч. вещественное;
• “categorical“ — фиксированное число возможных значений;
• “boolean“ — логическое значение;
• “string“ — строка.
Для отправки клиентам в макросах рассылки персонализированных многострочных текстов можно использовать символ разделения строк — \n (в макросах типа «string»). Эта возможность доступна только для API-вызовов, при вызове события из интерфейса (тестовый вызов события из консоли маркетолога) клиент получит \n в тексте рассылки.

Возможные состояния рассылки
Любая рассылка может находиться в одном из 4-х состояний:
• «Не запущена» — состояние рассылки с момента создания и до первого запуска. В этом состоянии пользователь (маркетолог) разрабатывает сценарий рассылки, задает основные настройки и аудиторию.
• «Включена в активном режиме» — в это состояние рассылка переходит поле запуска. В зависимости от настроек условий начала рассылки она начнет выполняться либо сразу, либо при появлении события или тега у клиента, либо при получении ключевого слова от клиента в мессенджере.
• «Включена в пассивном режиме» — в этом состоянии выполняются сценарии рассылок, начавшиеся в активном режиме, но не запускаются новые.
Если рассылка для фиксированной аудитории началась не для всех клиентов, то продолжаться она будет только для тех, для кого началась, а для оставшихся она уже не начнется.
Если рассылка настроена на начало по событию, при выставлении тега клиенту или при получении ключевого слова, то начавшиеся ранее (в активном режиме) сценарии будут продолжать выполняться. Но при появлении новых событий или выставлении тегов или получении ключевых слов рассылка начинаться не будет. Это состояние нужно для того, чтобы дать отработать рассылке для клиентов, для которых она уже началась, но не порождать новые запуски.
• «Отключена» — в этом состоянии рассылка не начинается для новых клиентов и не продолжается для тех, для кого она была начата ранее. Иными словами, клиенты не получают новые сообщения рассылки, а нажатия на кнопки в ранее полученных сообщениях не обрабатываются. Это состояние нужно для полного прекращения рассылки.

---
Дополнительные особенности интерфейса Marketer:
- Изменения при редактировании события применяются автоматически — кнопок "Сохранить" и "Отмена" нет.
- Значения аргументов вводятся при запуске события.
- Типы аргументов задаются при создании через выпадающий список.
- Валидация значений аргументов реализована на frontend с помощью соответствующих контролов:
  - string, decimal — текстовое поле (нельзя ввести буквы в числовое);
  - date — календарь;
  - categorical — выпадающий список;
  - boolean — чекбокс.
- Если пытаться изменить идентификатор аргумента, который используется в макросе рассылки, возникает ошибка.