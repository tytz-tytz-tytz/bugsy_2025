Ты — инженер по тестированию пользовательских интерфейсов.

Работа ведётся в интерфейсе Marketer. Пользовательские события в этом интерфейсе выступают в роли триггеров для запуска рассылок. Каждый тест должен отражать логику редактирования события в реальных условиях использования системы.

---

Цель

Сформулируй набор **тестовых сценариев**, охватывающих все ключевые аспекты редактирования пользовательского события.  
Каждый сценарий должен быть **отдельным и завершённым** примером поведения интерфейса при попытке изменить или удалить структуру события.

Основа для сценариев:
- поведение, описанное в технической документации;
- список заранее выделенных аспектов (атрибутов), представленный ниже.

---

Формат сценария

На каждый атрибут составь 1–2 независимых сценария.

Для каждого сценария укажи:

1. **Название** — лаконичное и однозначное;
2. **Цель** — что именно проверяется;
3. **Предпосылки** — указываются только если тест невозможен без предварительного состояния (например, "рассылка активна");
4. **Шаги** — чёткая последовательность пользовательских действий (обычно 2–5 шагов);
5. **Ожидаемый результат** — наблюдаемое поведение интерфейса или ответ от backend.

Формат:

1. <Название сценария>  
   Цель: …  
   Предпосылки: …  
   Шаги:  
   1. …  
   2. …  
   Ожидаемый результат: …

---

Требования

- Не придумывай сценарии, не соответствующие документации;
- Не описывай поведение, отсутствующее в интерфейсе;
- Описывай **только действия пользователя в UI**, не выходи на уровень реализации;
- Не добавляй стилистические, адаптивные или кроссбраузерные проверки.

---

Важно

- Различай **отображаемое имя** аргумента и его **идентификатор**;
- Помни, что **в макросах используется только идентификатор** аргумента;
- При описании поведения учитывай статус рассылки:
  - если рассылка активна — редактирование события недопустимо;
  - если рассылка отключена или не запущена — разрешены изменения с ограничениями;
- Учитывай ограничения UI: контролы запрещают некорректный ввод (например, поле типа `decimal` не принимает буквы, поле типа `date` открывает календарь, не поддерживает ручной ввод).

---

Атрибуты (поведение, которое нужно покрыть)

1. **Редактирование при активных рассылках**  
   Что проверяется: Запрет редактирования любых полей события, если хотя бы одна связанная рассылка находится в состоянии «Включена в активном режиме» или «Включена в пассивном режиме».  
   Почему важно: Активные рассылки зависят от текущей конфигурации события; изменения могут нарушить их выполнение.

2. **Изменение идентификатора аргумента, используемого в макросах**  
   Что проверяется: Блокировка изменения идентификатора аргумента, если он используется в макросах рассылок, с выводом ошибки.  
   Почему важно: Идентификаторы аргументов связаны с макросами рассылок; их изменение приведет к ошибкам в персонализации.

3. **Удаление неиспользуемых аргументов**  
   Что проверяется: Возможность удалить аргумент события, если он не используется в макросах рассылок.  
   Почему важно: Ненужные аргументы могут запутывать интерфейс, но их удаление должно быть безопасным при отсутствии зависимостей.

4. **Редактирование названия аргумента**  
   Что проверяется: Возможность изменить название аргумента даже при его использовании в макросах рассылок.  
   Почему важно: Название аргумента — это отображаемое имя, его изменение не влияет на логику работы макросов.

5. **Валидация типа аргумента при тестовой генерации**  
   Что проверяется: Блокировка ввода значений, не соответствующих типу аргумента (например, текст для decimal) в интерфейсе генерации события.  
   Почему важно: Гарантирует корректность данных, передаваемых в рассылки.

6. **Автоматическое сохранение изменений**  
   Что проверяется: Отсутствие кнопок «Сохранить»/«Отмена» и мгновенное применение изменений к backend.  
   Почему важно: Пользователь должен видеть актуальное состояние без ручного подтверждения, но это требует стабильного соединения.

7. **Ограничение изменения типа аргумента**  
   Что проверяется: Невозможность изменить тип аргумента после создания (например, с decimal на date).  
   Почему важно: Тип аргумента жестко связан с макросами рассылок и их обработкой.

8. **Отображение связей с рассылками**  
   Что проверяется: Информирование пользователя о количестве рассылок, использующих событие, и их состояниях.  
   Почему важно: Помогает оценить влияние изменений на бизнес-процессы.

9. **Реакция на конфликт при параллельном редактировании**  
   Что проверяется: Обработка ситуации, когда два пользователя одновременно вносят изменения в одно событие (например, блокировка или уведомление о конфликте).  
   Почему важно: Предотвращает потерю данных и неконсистентность.

10. **Валидация уникальности идентификатора события**  
    Что проверяется: Проверка на уникальность нового идентификатора события при его изменении.  
    Почему важно: Идентификаторы используются для генерации событий через API; дублирование приведет к коллизиям.

11. **Обновление макросов в рассылках после переименования аргумента**  
    Что проверяется: Автоматическое обновление отображаемого имени аргумента в макросах рассылок при изменении названия аргумента.  
    Почему важно: Пользователь должен видеть актуальные названия в конструкторе рассылок.

12. **Ошибка при удалении события с активными рассылками**  
    Что проверяется: Запрет удаления события, если с ним связаны рассылки в любом состоянии, кроме «Отключена».  
    Почему важно: Удаление события нарушит логику запуска рассылок, даже если они неактивны.

13. **Валидация формата идентификаторов**  
    Что проверяется: Проверка корректности формата идентификатора события и аргументов (например, запрет пробелов, спецсимволов).  
    Почему важно: Идентификаторы используются в API-вызовах и должны соответствовать техническим требованиям.

14. **Отображение предупреждений при редактировании**  
    Что проверяется: Показ предупреждений о влиянии изменений на связанные рассылки (например, при изменении имени события).  
    Почему важно: Пользователь должен осознавать последствия своих действий.

15. **Обработка ошибок backend при редактировании**  
    Что проверяется: Корректное отображение ошибок от сервера (например, 409 Conflict при невалидных данных) и откат изменений в интерфейсе.  
    Почему важно: Пользователь должен понимать причину отказа и иметь возможность исправить данные.

---

Документация

События могут являться триггером к началу рассылки для клиента. Это удобно для решения некоторых маркетинговых задач. Например, можно создать событие «Клиент воспользовался услугой» и генерировать его при оплате клиентом услуги. Получив информацию о событии, бот может запустить одну или несколько рассылок этому клиенту: контроль качества через несколько дней, повторное предложение услуги со скидкой через месяц и т. д.
События делятся на два типа:
1. Системные:
• Добавление нового клиента;
• Подтверждение номера телефона.
2. Пользовательские.

Пользовательские события
Пользовательские события могут генерироваться из другой рассылки или с помощью специального вызова API.
Пользовательские события можно создавать и удалять из интерфейса консоли маркетолога.

При создании события задается его идентификатор, имя и аргументы. Идентификатор события используется при генерации события. Имя используется для отображения события в интерфейсе, например, при выборе события в условиях запуска рассылки.
Аргументы позволяют передавать дополнительную информацию при генерации события.
При создании пользовательских событий в них может быть добавлено произвольное число аргументов. Например, для события «Клиент воспользовался услугой» можно добавить аргументы «Дата оказания услуги» и «Мастер, который оказывал услугу». Эти аргументы можно будет использовать в текстах сообщений, кнопках рассылки и других текстовых полях аналогично макросам. Таким образом, можно создавать персонифицированные для каждого клиента рассылки.

Редактирование событий
После создания пользовательского события маркетолог может произвольно редактировать все доступные поля и удалить его.
Если хотя бы одна рассылка настроена на старт по данному событию, то его удаление запрещено, редактирование названия и идентификатора рассылки разрешено. Редактирование и удаление аргументов события ограничено созданными в рассылке макросами. Если аргумент события не используется в рассылке, то его можно удалять и изменять. Если используется, то доступно только изменение названия аргумента.
Если хотя бы одна из рассылок, настроенных на старт по данному событию, запущена, то редактирование всех полей события и его аргументов запрещено.

Тестирование рассылок, запускаемых по событию
В интерфейсе консоли маркетолога предусмотрена возможность генерации событий в целях тестирования.
Для этого можно нажать кнопку «Сгенерировать событие» в разделе «События» напротив выбранного события или на странице самого события.
После генерации события с использованием интерфейса Marketer в области «Список launch_result_ids» отображаются специальные ссылки, позволяющие перейти к отладке рассылки.
При переходе по ссылке отображается интерфейс отладки, в котором применен фильтр по выбранному идентификатору запуска (launch_result_id).
Для передачи информации о запросе разработчикам компании, например, для интеграции с CRM, удобно использовать кнопки копирования запроса в формате curl.

При генерации событий при помощи интерфейса консоли маркетолога система не даст ввести значения аргументов, не соответствующие их типу. При генерации событий при помощи API-вызовов также выполняется проверка соответствия типов аргументов. Например, при вызове события с некорректным значением аргумента vip:
curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer Contoso_:eyJoXfDsaJkKrsGFH..." -d '{ "customer_messenger_id": 13561, "event_name": "numeric_code_for_client", "arguments": { "code": 133442, "discount": 15, "vip": "no" } }' "https://mailing-factory.dev.maxbot.ai/v1/event"
сервер вернет ответ с HTTP-статусом 409:
HTTP/2 409 { "detail": "Argument type error(boolean): no", "key": "argument_type" }

Использование макросов
Макросы позволяют персонифицировать рассылки для клиентов. Например, можно создать рассылку, в тексте которой используются два макроса:
• customer_name — имя и отчество клиента;
• customer_discount — персональная скидка.
Далее можно использовать файл аудитории, в котором заданы значения для используемых макросов.
Каждому клиенту из аудитории рассылки можно задать свои значения, таким образом, сделав рассылку уникальной для каждого клиента.

Поля, в которых можно использовать макросы
Макросы можно использовать почти во всех текстовых полях конструктора рассылок:
• Тексты сообщений;
• Заголовки кнопок;
• URL для кнопок-ссылок;
• URL для медиа-контента;
• Сообщения при переводе в канал;
• Большинство полей настроек вызова внешней системы (кроме названий заголовков запроса и названий параметров запроса);
• Аргументы события при генерации событий;
• Все текстовые поля SMS-блока и настройки вызова внешней системы в SMS-блоке
• Многие текстовые поля других действий9.

Если рассылка начинается при возникновении события, то в рассылку можно добавлять только макросы, названия которых совпадают с именами аргументов события, по которому стартует рассылка. При попытке использовать другой макрос возникнет ошибка. При попытке удалить аргумент события, который используется в рассылке, возникнет ошибка. При попытке сменить событие, по которому запускается рассылка, требуется чтобы у нового события были все аргументы, которые используются в рассылке.

Определение значений макросов для клиентов
Для рассылок, начинающихся по событию, значения макросов передаются в аргументах события. Например, если рассылка началась по событию «Создание промокода для клиента», то в теле рассылки могут быть использованы макросы {{code}}, {{discount}} и {{valid_thru}}.

Макросы могут иметь следующие типы:
• “date” — дата и время (используется формат ISO 8601);
• “decimal“ — число, в т. ч. вещественное;
• “categorical“ — фиксированное число возможных значений;
• “boolean“ — логическое значение;
• “string“ — строка.
Для отправки клиентам в макросах рассылки персонализированных многострочных текстов можно использовать символ разделения строк — \n (в макросах типа «string»). Эта возможность доступна только для API-вызовов, при вызове события из интерфейса (тестовый вызов события из консоли маркетолога) клиент получит \n в тексте рассылки.

Возможные состояния рассылки
Любая рассылка может находиться в одном из 4-х состояний:
• «Не запущена» — состояние рассылки с момента создания и до первого запуска. В этом состоянии пользователь (маркетолог) разрабатывает сценарий рассылки, задает основные настройки и аудиторию.
• «Включена в активном режиме» — в это состояние рассылка переходит поле запуска. В зависимости от настроек условий начала рассылки она начнет выполняться либо сразу, либо при появлении события или тега у клиента, либо при получении ключевого слова от клиента в мессенджере.
• «Включена в пассивном режиме» — в этом состоянии выполняются сценарии рассылок, начавшиеся в активном режиме, но не запускаются новые.
Если рассылка для фиксированной аудитории началась не для всех клиентов, то продолжаться она будет только для тех, для кого началась, а для оставшихся она уже не начнется.
Если рассылка настроена на начало по событию, при выставлении тега клиенту или при получении ключевого слова, то начавшиеся ранее (в активном режиме) сценарии будут продолжать выполняться. Но при появлении новых событий или выставлении тегов или получении ключевых слов рассылка начинаться не будет. Это состояние нужно для того, чтобы дать отработать рассылке для клиентов, для которых она уже началась, но не порождать новые запуски.
• «Отключена» — в этом состоянии рассылка не начинается для новых клиентов и не продолжается для тех, для кого она была начата ранее. Иными словами, клиенты не получают новые сообщения рассылки, а нажатия на кнопки в ранее полученных сообщениях не обрабатываются. Это состояние нужно для полного прекращения рассылки.

---
Дополнительные особенности интерфейса Marketer:
- Изменения при редактировании события применяются автоматически — кнопок "Сохранить" и "Отмена" нет.
- Значения аргументов вводятся при запуске события.
- Типы аргументов задаются при создании через выпадающий список.
- Валидация значений аргументов реализована на frontend с помощью соответствующих контролов:
  - string, decimal — текстовое поле (нельзя ввести буквы в числовое);
  - date — календарь;
  - categorical — выпадающий список;
  - boolean — чекбокс.
- Если пытаться изменить идентификатор аргумента, который используется в макросе рассылки, возникает ошибка.