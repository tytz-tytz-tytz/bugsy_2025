from typing import List


def build_prompt_no_dom(
    context_chunks: List[str],
    scenario: str,
    use_equivalence_classes: bool = True,
    include_test_types: bool = True,
) -> str:
    """
    Генерация промпта без DOM
    """
    prompt = "Ты — инженер по тестированию пользовательских интерфейсов.\n"
    prompt += f"\nТвоя задача:\n{scenario.strip()}\n"

    prompt += """\nЦель тестирования: \nПроверить frontend-логику интерфейса, включая:
- отображение данных;
- реакцию на действия пользователя (клики, ввод, переключения);
- валидацию форм;
- поведение при ошибках (некорректные данные, проблемы с сервером);
- взаимодействие с backend (отправка и получение данных);
- сохранение и восстановление состояния компонентов.\n\n"""
    prompt += """Что протестировать: \nСконцентрируйся на элементах управления, связанных с задачей:
- выпадающие списки;
- чекбоксы;
- поля ввода;
- переключатели;
- логика зависимости между ними.\n\n"""
    
    if include_test_types:
        prompt += """Требования к тест-кейсам:
- Сгенерируй ровно 20 тест-кейсов — не меньше;
- Используй разнообразные элементы интерфейса, классы эквивалентности, позитивные, негативные и граничные случаи;
- Не включай тесты, связанные с визуальной стилизацией, адаптивностью, кроссбраузерностью и мультиязычностью;
- Включи тесты с граничными значениями, множественным выбором, конфликтами, валидацией, удалением блоков после связывания, отменой настроек, некорректными параметрами и пустыми полями.\n"""

    prompt += "\nФормат описания теста:\n1. Тест №:Название теста\n2. Предусловия\n3. Действия\n4. Ожидаемый результат\n"

    prompt += """Пример:
Тест №1: Проверка ошибки при отсутствии обязательного параметра

Действия:
1.	Добавить в рассылку блок с сообщением и weburl-кнопкой, url которой состоит из пробелов
2.	Блок сообщением должен участвовать в сценарии
3.	Запустить рассылку

Ожидаемый результат: Появляется сообщение об ошибке, запуск невозможен.\n"""

    prompt += "\nО продукте:\nMarketer — интерфейс Maxbot для настройки и запуска клиентских рассылок через мессенджеры и SMS. Интерфейс включает инструменты автоматизации (например, генерация событий, фильтрация по аудитории, настройка сценариев).\n"

    prompt += "\nКонтекст:\nНиже приведены фрагменты документации, описывающие поведение интерфейса. Используй их при генерации тестовых сценариев:\n"
    for i, chunk in enumerate(context_chunks):
        short_title = f"Фрагмент {i+1}"
        prompt += f"\n{short_title}: {chunk.strip()}\n"

    return prompt